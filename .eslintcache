[{"/Users/filipmertens/code/boxtest/src/index.tsx":"1","/Users/filipmertens/code/boxtest/src/reportWebVitals.ts":"2","/Users/filipmertens/code/boxtest/src/App.tsx":"3","/Users/filipmertens/code/boxtest/src/components/IPFS/IPFSService.ts":"4","/Users/filipmertens/code/boxtest/src/components/Remix/Client.ts":"5","/Users/filipmertens/code/boxtest/src/components/Files/FileService.ts":"6","/Users/filipmertens/code/boxtest/src/components/git/gitService.ts":"7","/Users/filipmertens/code/boxtest/src/components/3box/3boxService.ts":"8","/Users/filipmertens/code/boxtest/src/components/Files/utils.ts":"9","/Users/filipmertens/code/boxtest/src/components/Files/FileTools.tsx":"10","/Users/filipmertens/code/boxtest/src/components/Files/FileExplorer.tsx":"11","/Users/filipmertens/code/boxtest/src/components/IPFS/IPFSView.tsx":"12","/Users/filipmertens/code/boxtest/src/components/git/gitControls.tsx":"13","/Users/filipmertens/code/boxtest/src/components/git/Diff.tsx":"14","/Users/filipmertens/code/boxtest/src/components/git/gitLog.tsx":"15","/Users/filipmertens/code/boxtest/src/components/git/gitBranch.tsx":"16","/Users/filipmertens/code/boxtest/src/components/Files/Buttons.tsx":"17","/Users/filipmertens/code/boxtest/src/components/Files/statuses.tsx":"18","/Users/filipmertens/code/boxtest/src/components/3box/Box.tsx":"19","/Users/filipmertens/code/boxtest/src/components/Import/importer.tsx":"20","/Users/filipmertens/code/boxtest/src/components/Import/BoxImporter.tsx":"21","/Users/filipmertens/code/boxtest/src/components/Import/IPFSImporter.tsx":"22","/Users/filipmertens/code/boxtest/src/components/loaderService.ts":"23","/Users/filipmertens/code/boxtest/src/components/Help.tsx":"24","/Users/filipmertens/code/boxtest/src/components/git/RepoName.tsx":"25","/Users/filipmertens/code/boxtest/src/components/LocalStorage/LocalStorage.ts":"26","/Users/filipmertens/code/boxtest/src/components/LocalStorage/LocalIPFSView.tsx":"27"},{"size":500,"mtime":1607789583666,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1607789583667,"results":"30","hashOfConfig":"29"},{"size":4192,"mtime":1608067203442,"results":"31","hashOfConfig":"29"},{"size":4613,"mtime":1608067599340,"results":"32","hashOfConfig":"29"},{"size":2604,"mtime":1608065158346,"results":"33","hashOfConfig":"29"},{"size":9677,"mtime":1608065443956,"results":"34","hashOfConfig":"29"},{"size":8641,"mtime":1608065514559,"results":"35","hashOfConfig":"29"},{"size":1748,"mtime":1608062602585,"results":"36","hashOfConfig":"29"},{"size":2997,"mtime":1607792561500,"results":"37","hashOfConfig":"29"},{"size":1236,"mtime":1608064508368,"results":"38","hashOfConfig":"29"},{"size":2058,"mtime":1607950069155,"results":"39","hashOfConfig":"29"},{"size":1999,"mtime":1608061452504,"results":"40","hashOfConfig":"29"},{"size":1135,"mtime":1608063347511,"results":"41","hashOfConfig":"29"},{"size":919,"mtime":1607792561506,"results":"42","hashOfConfig":"29"},{"size":1686,"mtime":1608063155551,"results":"43","hashOfConfig":"29"},{"size":1829,"mtime":1608057092073,"results":"44","hashOfConfig":"29"},{"size":2984,"mtime":1607890858524,"results":"45","hashOfConfig":"29"},{"size":397,"mtime":1607792561499,"results":"46","hashOfConfig":"29"},{"size":1977,"mtime":1608050738008,"results":"47","hashOfConfig":"29"},{"size":1371,"mtime":1608055798583,"results":"48","hashOfConfig":"29"},{"size":2540,"mtime":1608056417341,"results":"49","hashOfConfig":"29"},{"size":884,"mtime":1608055391170,"results":"50","hashOfConfig":"29"},{"size":204,"mtime":1607853812277,"results":"51","hashOfConfig":"29"},{"size":615,"mtime":1607892075581,"results":"52","hashOfConfig":"29"},{"size":1628,"mtime":1608056978394,"results":"53","hashOfConfig":"29"},{"size":2121,"mtime":1608063089863,"results":"54","hashOfConfig":"29"},{"size":2458,"mtime":1608062556625,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"131wf7i",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"58"},"/Users/filipmertens/code/boxtest/src/index.tsx",[],["128","129"],"/Users/filipmertens/code/boxtest/src/reportWebVitals.ts",[],"/Users/filipmertens/code/boxtest/src/App.tsx",["130","131","132","133","134","135","136"],"/Users/filipmertens/code/boxtest/src/components/IPFS/IPFSService.ts",["137"],"/Users/filipmertens/code/boxtest/src/components/Remix/Client.ts",[],"/Users/filipmertens/code/boxtest/src/components/Files/FileService.ts",["138","139","140","141","142"],"/Users/filipmertens/code/boxtest/src/components/git/gitService.ts",["143","144"],"/Users/filipmertens/code/boxtest/src/components/3box/3boxService.ts",["145"],"import { toast } from \"react-toastify\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { gitservice, ipfservice, loaderservice, localipfsstorage } from \"../../App\";\n\nexport interface boxObject {\n  key?: string;\n  cid?: string;\n  datestored?: string | number | Date;\n  datecommit?: number | string | Date;\n  timestamp: number;\n  ref?: string;\n  message?: string;\n  links?: string;\n}\nexport class BoxService {\n  status = new BehaviorSubject<boolean>(false);\n  boxObjects = new BehaviorSubject<boxObject[] | []>([]);\n  box: any;\n  space: any;\n\n  showspinner() {}\n\n  hidespinner() {}\n  // 3BOX connection\n\n  async setSpace(space: any) {\n    this.space = space;\n  }\n\n  async storeHashIn3Box(space: any) {\n    if (typeof this.space == \"undefined\") {\n      toast.error(\"You should connect to 3Box first\");\n      return false;\n    }\n    loaderservice.setLoading(true)\n    await ipfservice.addToIpfs();\n    console.log(\"export 3box\", ipfservice.cid, this.space);\n\n    const ob = await localipfsstorage.createBoxObject()\n\n    await this.space.private.set(ob.key, ob);\n    toast.success(\"Stored in 3box\");\n    await this.getObjectsFrom3Box(space);\n    loaderservice.setLoading(false)\n  }\n\n  async getObjectsFrom3Box(space: any) {\n    console.log(\"get objects from box\");\n    const hashes: boxObject[] = await space.private.all();\n    this.boxObjects.next(Object.values(hashes));\n    console.log(hashes);\n    return Object.values(hashes);\n  }\n\n  async deleteFrom3Box(args: string | undefined) {\n    if (args !== undefined) {\n      const key = args;\n      console.log(\"key\", key);\n      loaderservice.setLoading(true)\n      await this.space.private.remove(key);\n      await this.getObjectsFrom3Box(this.space);\n      loaderservice.setLoading(false)\n    }\n  }\n}\n","/Users/filipmertens/code/boxtest/src/components/Files/utils.ts",["146","147","148"],"import path from \"path\";\nimport { fileExplorerNode } from \"./types\";\n\nexport const removeSlash = (s: string) => {\n  return s.replace(/^\\/+/, \"\");\n};\n\nexport const jsonObjectFromFileList = (files: string[]) => {\n  const ob: fileExplorerNode[] = [];\n  // reindex filelist\n  files.map((f, i) => {\n    const dirname = path.dirname(files[i]);\n    if (dirname.startsWith(\"/.\")) return true;\n    const basename = path.basename(files[i]);\n    const directories = removeSlash(dirname).split(\"/\");\n    let node: fileExplorerNode;\n    if (\n      !ob.find((x) => {\n        return x.fullname === dirname;\n      })\n    ) {\n      node = {\n        type: \"dir\",\n        dir: true,\n        file: false,\n        name: directories.pop(),\n        fullname: dirname,\n        parentDir: path.dirname(dirname),\n      };\n      ob.push(node);\n    }\n\n    let previouspath = \"\";\n    for (let i = 0; i < directories.length; i++) {\n      if (i > 0) previouspath = \"/\" + directories.slice(0, i).join(\"/\");\n      const finalPath = previouspath + \"/\" + directories[i];\n      if (\n        !ob.find((x) => {\n          return x.fullname === finalPath;\n        })\n      ) {\n        node = {\n          type: \"dir\",\n          dir: true,\n          file: false,\n          name: directories[i],\n          fullname: finalPath,\n          parentDir: path.dirname(finalPath),\n        };\n        ob.push(node);\n      }\n    }\n    if (\n      !ob.find((x) => {\n        return x.fullname === files[i];\n      })\n    ) {\n      node = {\n        type: \"file\",\n        file: true,\n        dir: false,\n        name: basename,\n        fullname: files[i],\n        directory: dirname,\n        status: [],\n      };\n      ob.push(node);\n    }\n  });\n  // asign ids\n  ob.map((f, i) => {\n    f.id = i;\n  });\n  // find parents\n  ob.map((f, i) => {\n    f.parentId = null;\n    f.children = null;\n    if (f.type === \"file\") {\n      // f.parent\n\n      const parent = ob.find((x) => {\n        return x.fullname === f.directory && x.type === \"dir\";\n      });\n      f.parentId = parent ? parent.id : null;\n    } else {\n      //console.log(f)\n      const parent = ob.find((x) => {\n        return x.fullname === f.parentDir && x.type === \"dir\";\n      });\n      f.parentId = parent ? parent.id : null;\n    }\n  });\n  console.log(\"build tree from\", ob.sort(sortbydirectorylevel));\n  // first we need it sorted\n  const nest = (items: any, id = null, link = \"parentId\") =>\n    items\n      .filter((item: any) => item[link] === id)\n      .map((item: any) => ({\n        ...item,\n        children: nest(items, item.id),\n      }));\n\n  console.log(\"build tree from\", ob);\n\n  let t: fileExplorerNode[] = nest(ob);\n\n  let result: fileExplorerNode = {\n    children: t,\n  };\n  // console.log('OB', ob)\n  return result;\n};\n\nconst sortbydirectorylevel = (a: any, b: any) => {\n  //console.log(a,b);\n  if (a.fullname.split(\"/\").length < b.fullname.split(\"/\").length) {\n    return -1;\n  }\n  if (a.fullname.split(\"/\").length > b.fullname.split(\"/\").length) {\n    return 1;\n  }\n  return 0;\n};\n","/Users/filipmertens/code/boxtest/src/components/Files/FileTools.tsx",["149"],"import React from 'react'\nimport { fileservice, localipfsstorage } from '../../App'\n\ninterface FileToolsProps {\n\n}\n\nexport const FileTools: React.FC<FileToolsProps> = ({}) => {\n        return (\n        <>\n        <hr/>\n        <button className=\"btn btn-danger w-10 d-none\" onClick={async()=>fileservice.getDirectory(\"/\")}>get dir</button>\n        <button className=\"btn btn-danger w-10 d-none\" onClick={async()=>fileservice.syncFromBrowser()}>Sync from IDE</button>\n        <button className=\"btn btn-primary w-10 ml-2\" onClick={async()=>fileservice.startNewRepo()}>Start new repo</button> |\n        <button className=\"btn btn-danger w-10 ml-2\" onClick={async()=>fileservice.clearAll()}>Clear all files & git init</button>\n        <button className=\"btn btn-danger w-10 ml-2\" onClick={async()=>fileservice.clearFilesInWorkSpace()}>Clear files in browser</button>\n        <button className=\"btn btn-danger w-10 ml-2\" onClick={async()=>fileservice.syncStart()}>sync start</button>\n\n        <button className=\"btn btn-danger w-10 d-none\" onClick={async()=>fileservice.showFiles()}>show files</button>\n\n        <button className=\"btn btn-danger w-10\" onClick={async()=>localipfsstorage.init()}>show config</button>\n        </>\n        );\n}","/Users/filipmertens/code/boxtest/src/components/Files/FileExplorer.tsx",[],"/Users/filipmertens/code/boxtest/src/components/IPFS/IPFSView.tsx",["150","151"],"import React from \"react\";\nimport { useBehaviorSubject } from \"use-subscribable\";\nimport { boxservice, ipfservice, localipfsstorage } from \"../../App\";\nimport { BoxController } from \"../3box/Box\";\n\ninterface IPFSViewProps {}\n\nexport const IPFSView: React.FC<IPFSViewProps> = () => {\n  const cid = useBehaviorSubject(ipfservice.cidBehavior);\n  const boxconnected = useBehaviorSubject(boxservice.status);\n\n  ipfservice.cidBehavior.subscribe((x) => {}).unsubscribe();\n  boxservice.status.subscribe((x) => {}).unsubscribe();\n\n  const getUrlLink = () => {\n    if (ipfservice.cid !== \"\" && ipfservice.cid !== undefined) {\n      return (\n        <a target=\"_blank\" href={getUrl()} id=\"CID\">\n          Your data is here: {getUrl()}\n        </a>\n      );\n    } else {\n      return <></>;\n    }\n  };\n\n  const addFilesToIpfs = async ()=>{\n    try{\n      await ipfservice.addToIpfs()\n      await localipfsstorage.addToStorage(await localipfsstorage.createBoxObject())\n    }catch(e){\n\n    }\n  }\n\n  const getUrl = () => {\n    return `${ipfservice.ipfsconfig.ipfsurl}${cid}`;\n  };\n\n  return (\n    <>\n    <h4>Local storage & IPFS</h4>\n      <button\n        className=\"btn w-25 btn-primary\"\n        id=\"main-btn\"\n        onClick={async () => await addFilesToIpfs() }\n      >\n        Export to IPFS only & store in local storage\n      </button>\n      <br />\n      <div id=\"ipfsAlert\" role=\"alert\"></div>\n      <br />\n      {getUrlLink()}\n      <hr />\n      <h4>3Box Storage</h4>\n      <div className=\"alert alert-info w-25\" role=\"alert\">\n        This will export the files to IPFS and store a key in your 3Box account.\n      </div>\n      <BoxController buttonTitle=\"Export to 3Box\" storeData={true}/>\n      {/* <h4>Step 2</h4>\n      <button\n        className=\"btn w-25 btn-primary 3boxbtn\"\n        disabled={!boxconnected}\n        onClick={async () => await boxservice.storeHashIn3Box(boxservice.space)}\n      >\n        Export to 3Box & IPFS\n      </button> */}\n      <div id=\"boxexportstatus\"></div>\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/git/gitControls.tsx",["152"],"import React, { useState } from \"react\";\nimport { gitservice } from \"../../App\";\nimport { GitBranch } from \"./gitBranch\";\nimport { GitLog } from \"./gitLog\";\n\ninterface gitViewProps {}\n\nexport const GitControls: React.FC<gitViewProps> = ({}) => {\n\n  const [message,setMessage] = useState({value:''})\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>)=> {\n      setMessage({value:e.currentTarget.value})\n  }\n\n  return (\n    <>\n      <hr />\n      {/* <button className=\"btn w-25 btn-primary\" onClick={async () =>await gitservice.init()}>git init</button> */}\n\n      {/* <button className=\"btn w-25 btn-primary\" onClick={async()=>gitservice.addAll()} >git add all</button> */}\n      <hr />\n      <div className=\"form-group\">\n        <label>Message</label>\n        <input className=\"form-control w-25\" type=\"text\" onChange={handleChange} value={message.value} />\n      </div>\n      <button className=\"btn w-25 btn-primary\" disabled={message.value!==\"\"?false:true} onClick={async()=>gitservice.commit(message.value)} >git commit</button>\n      <br /><hr />\n      <GitLog/>\n      <br /><hr />\n      <GitBranch/>\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/git/Diff.tsx",["153","154","155","156"],"import React, { useEffect, useState } from \"react\";\nimport { ReactGhLikeDiff } from \"react-gh-like-diff\";\nimport \"./diff.css\"\nimport { useBehaviorSubject } from \"use-subscribable\";\nimport { gitservice } from \"../../App\";\n\ninterface DiffProps {}\n\nexport const DiffView: React.FC<DiffProps> = ({}) => {\n  const [mock, setMock] = useState(\"\");\n  const diffs = useBehaviorSubject(gitservice.diffResult);\n\n  gitservice.diffResult.subscribe((x) => console.log(\"diff\", x)).unsubscribe();\n\n  return (\n    <div className='container-fluid'>\n      {diffs?.map((diff) => {\n        return (\n           \n          <ReactGhLikeDiff key={diff.originalFileName}\n            options={{\n              originalFileName: diff?.originalFileName,\n              updatedFileName: diff?.updatedFileName,\n            }}\n            past={diff?.past}\n            current={diff?.current}\n          />\n         \n        );\n      })}\n </div>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/git/gitLog.tsx",["157"],"import { ReadCommitResult } from \"isomorphic-git\";\nimport React from \"react\";\nimport { useBehaviorSubject } from \"use-subscribable\";\nimport { gitservice } from \"../../App\";\nimport { default as dateFormat } from 'dateformat'\ninterface gitLogProps {}\n\nexport const GitLog: React.FC<gitLogProps> = ({}) => {\n  const commits = useBehaviorSubject(gitservice.commits);\n\n  gitservice.commits\n    .subscribe((x) => {\n      console.log(commits);\n    })\n    .unsubscribe();\n\n  const getDate = (commit: ReadCommitResult) => {\n    let date = dateFormat(commit.commit.committer.timestamp * 1000, \"dddd, mmmm dS, yyyy, h:MM:ss TT\");\n    return date\n  };\n\n  return (\n    <>\n      <button\n        className=\"btn w-25 btn-primary\"\n        onClick={async () => gitservice.gitlog()}\n      >\n        git log\n      </button>\n\n      <hr />\n      <h4>Commits</h4>\n\n      <div className=\"container-fluid\">\n        {commits?.map((commit) => {\n          return (\n            <div key={commit.oid} className=\"row p-1 small\">\n              <div className=\"col-2\">{commit.commit.message}</div>\n              <div className=\"col\">{getDate(commit)}</div>\n              <div className=\"col\">{commit.oid}</div>\n              <div\n                onClick={async () => gitservice.checkout(commit.oid)}\n                className=\"btn btn-primary btn-sm checkout-btn\"\n              >\n                git checkout\n              </div>\n            </div>\n          );\n        })}\n        <div\n          onClick={async () => gitservice.checkout(\"master\")}\n          className=\"btn btn-primary btn-sm checkout-btn\"\n          data-oid=\"master\"\n        >\n          git checkout master\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/git/gitBranch.tsx",["158"],"import React, { useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { useBehaviorSubject } from \"use-subscribable\";\nimport { gitservice } from \"../../App\";\n\ninterface gitBranchProps {}\n\nexport const GitBranch: React.FC<gitBranchProps> = ({}) => {\n  const branches = useBehaviorSubject(gitservice.branches);\n  const branch = useBehaviorSubject(gitservice.branch);\n  const [newBranch,setNewBranch] = useState({value:''})\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>)=> {\n      setNewBranch({value:e.currentTarget.value})\n  }\n\n  gitservice.branches\n    .subscribe((x) => {\n      console.log(branches);\n    })\n    .unsubscribe();\n\n  gitservice.branch\n    .subscribe((x) => {\n      console.log(branch);\n    })\n    .unsubscribe();\n\n  return (\n    <>\n      <h4>Branches</h4>\n      <Alert className=\"w-50\" variant=\"success\">\n        {branch}\n      </Alert>\n      {branches?.map((branch) => {\n        return (\n          <div key={branch} className=\"row p-1\">\n            <div className=\"col-2\">{branch}</div>\n            <div className=\"col\">\n              <span className=\"float-right\">\n                <div\n                  onClick={async () => gitservice.checkout(branch)}\n                  className=\"btn btn-primary btn-sm checkout-btn\"\n                >\n                  checkout\n                </div>\n              </span>\n            </div>\n          </div>\n        );\n      })}\n      <hr />\n      <h4>Create branch</h4>\n      <div className=\"form-group\">\n        <label>Branchname</label>\n        <input onChange={handleChange} className=\"form-control w-25\" type=\"text\" id=\"newbranchname\" />\n      </div>\n      <button onClick={async()=>gitservice.createBranch(newBranch.value)} className=\"btn w-25 btn-primary\" id=\"createbranch-btn\">\n        git branch\n      </button>\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/Files/Buttons.tsx",["159","160"],"import React from \"react\";\nimport { client, fileservice, gitservice } from \"../../App\";\nimport \"./FileExplorer.css\";\nimport { fileExplorerNode } from \"./types\";\ninterface FileButtonsProps {\n  file: fileExplorerNode;\n  setTab: (key: string) => void;\n}\n\nexport const FileButtons: React.FC<FileButtonsProps> = ({\n  file,\n  setTab,\n}: FileButtonsProps) => {\n  const diffFile = (file: fileExplorerNode) => {\n    gitservice.diffFiles();\n    ///setTab(\"diff\")\n  };\n\n  const gitaddButton = (file: fileExplorerNode) => {\n    let status = fileservice.getFileStatusForFile(file.fullname || \"\");\n    if (\n      status?.indexOf(\"deleted\") === -1 &&\n      status?.indexOf(\"unmodified\") === -1\n    ) {\n      return (\n        <div\n          className={\"badge badge-primary addgit\"}\n          onClick={async () => await gitservice.addToGit(file.fullname)}\n        >\n          git add\n        </div>\n      );\n    } else {\n      return <div className={\"badge badge-secondary addgit\"}>git add</div>;\n    }\n  };\n\n  const giteditButton = (file: fileExplorerNode) => {\n    let status = fileservice.getFileStatusForFile(file.fullname || \"\");\n    if (status?.indexOf(\"deleted\") === -1) {\n      return (\n        <div\n          className={\"badge badge-primary addgit\"}\n          onClick={async () => await fileservice.viewFile(file.fullname)}\n        >\n          edit\n        </div>\n      );\n    } else {\n      return <div className={\"badge badge-secondary addgit\"}>edit</div>;\n    }\n  };\n\n  const gitrmbutton = (file: fileExplorerNode) => {\n    let status = fileservice.getFileStatusForFile(file.fullname || \"\");\n    if (status?.indexOf(\"deleted\") === -1) {\n      return <div className={\"badge badge-secondary addgit\"}>git rm</div>;\n    } else {\n      if (status?.indexOf(\"staged\") === -1) {\n        return (\n          <div\n            className={\"badge badge-primary addgit\"}\n            onClick={async () => await gitservice.gitrm(file.fullname)}\n          >\n            git rm\n          </div>\n        );\n      }else{\n        return <div className={\"badge badge-secondary addgit\"}>git rm</div>;\n      }\n    }\n  };\n\n  const checkoutbutton = (file: fileExplorerNode) => {\n    let status = fileservice.getFileStatusForFile(file.fullname || \"\");\n    if (\n      status?.indexOf(\"modified\") === -1 &&\n      (status?.indexOf(\"deleted\") === -1 ||\n        status?.indexOf(\"staged\") ||\n        status?.indexOf(\"unstaged\"))\n    ) {\n      return <div className={\"badge badge-secondary addgit\"}>git checkout</div>;\n    } else {\n      return (\n        <div\n          className={\"badge badge-primary addgit\"}\n          onClick={async () => await gitservice.checkoutfile(file.fullname)}\n        >\n          git checkout\n        </div>\n      );\n    }\n  };\n\n  if (file.type === \"file\") {\n    return (\n      <span className=\"status float-right ml-3\">\n        {giteditButton(file)}\n        {gitrmbutton(file)}\n        {gitaddButton(file)}\n        {checkoutbutton(file)}\n      </span>\n    );\n  } else {\n    return <></>;\n  }\n};\n","/Users/filipmertens/code/boxtest/src/components/Files/statuses.tsx",[],"/Users/filipmertens/code/boxtest/src/components/3box/Box.tsx",["161"],"import React, { useState } from \"react\";\nimport Box from \"3box\";\nimport Web3Modal from \"web3modal\";\nimport { getAddress } from \"@ethersproject/address\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { boxservice, loaderservice, providerOptions } from \"../../App\";\nimport { toast } from \"react-toastify\";\n\ninterface BoxProps {\n  buttonTitle:string,\n  storeData:boolean\n}\n\nexport const BoxController: React.FC<BoxProps> = (p) => {\n  const [status, setStatus] = useState(false);\n  let address = \"\";\n  let mybox;\n  let space;\n\n  \n  const modal = new Web3Modal({\n    providerOptions: providerOptions, // required\n  });\n\n  modal.on(\"connect\", async (provider) => {\n    \n    if (!status) {\n      const [eth] = await provider.enable();\n      address = getAddress(eth);\n      loaderservice.setLoading(true);\n      toast.info(\"Please wait... this can take a while\");\n      console.log(address);\n      mybox = await Box.openBox(address, window.ethereum);\n      toast.success(\"3box connected... waiting for space to open\");\n      console.log(mybox);\n      space = await mybox.openSpace(\"remix-workspace\");\n      //toast.success(\"space opened... getting data\")\n      console.log(space);\n\n      await boxservice.setSpace(space);\n      await boxservice.getObjectsFrom3Box(space);\n      boxservice.status.next(true);\n\n      setStatus(true);\n    }\n    if(p.storeData)\n    await boxservice.storeHashIn3Box(boxservice.space);\n    loaderservice.setLoading(false);\n    // .then((x) => toast.success(\"connected to 3box\"))\n    // .catch((x) => toast.error(\"can't connect to 3box\"));\n  });\n\n  const startConnect = async () => {\n    modal.connect();\n  };\n\n  return (\n    <>\n      <button\n        className=\"btn w-25 btn-primary 3boxbtn\"\n        id=\"boxconnect\"\n        onClick={async () => await startConnect()}\n      >\n        {p.buttonTitle}\n      </button>\n      <div id=\"3boxconnection\">\n        {status ? <>connected</> : <>disconnected</>}\n      </div>\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/Import/importer.tsx",["162"],"import React from \"react\";\nimport { LocalIPFSView } from \"../LocalStorage/LocalIPFSView\";\nimport { BoxImporter } from \"./BoxImporter\";\nimport { IPFSImporter } from \"./IPFSImporter\";\n\n\n\ninterface importerProps {}\n\nexport const Importer: React.FC<importerProps> = ({}) => {\n  return (\n    /* \n            <>\n\n<h4>3Box storage</h4>\n<div className=\"alert alert-info\" role=\"alert\">This will import the IPFS repo from a key stored in your 3Box account.\n</div>\n<div className=\"container-fluid\">\n\n    <div className=\"row p-1 small\">\n        <div className=\"col-4\">\n            IPFS: <a target=\"_blank\" href=\"{{link}}\">{{cid}}</a><br>\n            DATE: {{datestored}}<br>\n            DATE OF COMMIT: {{datecommit}}<br>\n            MESSAGE: {{message}}<br>\n            COMMIT: {{ref}}<br>\n        </div>\n        <div className=\"col\">\n            <button className=\"btn btn-primary btn-sm float-right import3b-btn float-right\" data-cid=\"{{cid}}\">\n                import\n            </button>\n        </div>\n        <div className=\"col\">\n            <button className=\"btn btn-danger btn-sm float-right delete3b-btn float-right\" data-key=\"{{key}}\">\n                <span className=\"fas fa-trash\"></span>\n            </button>\n        </div>\n    </div>\n\n</div>\n            </> */\n    <>\n        <IPFSImporter/>\n        <LocalIPFSView/>\n        <BoxImporter/>\n        \n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/Import/BoxImporter.tsx",["163","164","165"],"import { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useBehaviorSubject } from \"use-subscribable\";\nimport { boxservice, ipfservice } from \"../../App\";\nimport { boxObject } from \"../3box/3boxService\";\nimport { BoxController } from \"../3box/Box\";\n\ninterface boximporterProps {}\n\nexport const BoxImporter: React.FC<boximporterProps> = ({}) => {\n  const boxobjects = useBehaviorSubject(boxservice.boxObjects);\n\n  boxservice.boxObjects\n    .subscribe((x) => {\n      console.log(\"box objects\", x);\n    })\n    .unsubscribe();\n\n  const getUrlLink = (cid: string | undefined) => {\n    if (cid !== \"\" && cid !== undefined) {\n      return (\n        <a target=\"_blank\" href={getUrl(cid)} id=\"CID\">\n          {getUrl(cid)}\n        </a>\n      );\n    } else {\n      return <></>;\n    }\n  };\n\n  const getUrl = (cid: string) => {\n    return `${ipfservice.ipfsconfig.ipfsurl}${cid}`;\n  };\n\n  return (\n    <>\n      <hr></hr>\n      <h4>3Box storage</h4>\n      <div className=\"alert alert-info\" role=\"alert\">\n        This will import the IPFS repo from a key stored in your 3Box account.\n      </div>\n      <BoxController buttonTitle=\"Connect to 3Box\" storeData={false}/>\n      <div className=\"container-fluid\">\n        {(boxobjects || []).map((o) => {\n          return (\n            <div className=\"row p-1 small\">\n              <Card className=\"w-75\">\n                <Card.Body>\n                    <Card.Title>\n                  {o.key}\n                  </Card.Title>\n                  <br />\n                  IPFS: {getUrlLink(o.cid)}\n                  <br />\n                  DATE: {o.datestored}\n                  <br />\n                  DATE OF LAST COMMIT: {o.datecommit}\n                  <br />\n                  MESSAGE: {o.message}\n                  <br />\n                  COMMIT: {o.ref}\n                  <br />\n                </Card.Body>\n              </Card>\n              <div className=\"col\">\n                <button onClick={async()=> await ipfservice.importFromCID(o.cid)} className=\"btn btn-primary btn-sm mr-2 import3b-btn\">\n                  import\n                </button>\n                <button onClick={async()=> await boxservice.deleteFrom3Box(o.key)} className=\"btn btn-danger btn-sm delete3b-btn\">\n                  <FontAwesomeIcon icon={faTrash} />\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/Import/IPFSImporter.tsx",["166"],"import React, { useState } from \"react\";\nimport { ipfservice } from \"../../App\";\n\ninterface ipfsimporterProps {}\n\nexport const IPFSImporter: React.FC<ipfsimporterProps> = ({}) => {\n  const [cid, setCID] = useState({ value: \"\" });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCID({ value: e.currentTarget.value });\n  };\n  return (\n    <>\n      <div className=\"alert alert-warning\" role=\"alert\">\n        Importing files will clear the filelist.\n      </div>\n      <div className=\"form-group\">\n        <label>IPFS CID</label>\n        <input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"ipfs\" />\n      </div>\n      <div id=\"ipfsimportalert\"></div>\n      <button onClick={async()=>ipfservice.importFromCID(cid.value)} className=\"btn w-25 btn-primary\" id=\"clone-btn\">\n        import from IPFS\n      </button>\n      <hr />\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/loaderService.ts",[],"/Users/filipmertens/code/boxtest/src/components/Help.tsx",["167"],"import React, { useEffect, useState } from 'react'\nimport marked from \"marked\";\ninterface HelpProps {\n\n}\n\nexport const Help: React.FC<HelpProps> = ({}) => {\n    const [markdown,setMarkdown] = useState(\"\")\n    useEffect(()=>{\n        fetch(\"https://raw.githubusercontent.com/bunsenstraat/remix-storage-plugin/master/README.md\").then(response => {\n            return response.text()\n          })\n          .then(text => {\n            setMarkdown(text)\n          })\n    },[])\n    return (\n        <section>\n          <article dangerouslySetInnerHTML={{__html: marked(markdown)}}></article>\n        </section>\n      )\n}","/Users/filipmertens/code/boxtest/src/components/git/RepoName.tsx",["168","169"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { useBehaviorSubject } from \"use-subscribable\";\nimport { gitservice } from \"../../App\";\nimport { gitService } from \"./gitService\";\n\ninterface RepoNameProps {}\n\nexport const RepoName: React.FC<RepoNameProps> = ({}) => {\n  const [name, setNAme] = useState({ value: \"\" });\n  const reponame = useBehaviorSubject(gitservice.reponameSubject)\n\n  gitservice.reponameSubject.subscribe((x)=>{}).unsubscribe()\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNAme({ value: e.currentTarget.value });\n  };\n  const saveName = () => {\n      gitservice.reponameSubject.next(name.value)\n      gitservice.reponame = name.value\n      localStorage.setItem(\"currentRepo\",name.value)\n  };\n\n  useEffect(()=>{\n    let name:string = localStorage.getItem(\"currentRepo\") || \"\"\n    gitservice.reponame = name\n    gitservice.reponameSubject.next(name)\n  },[])\n\n  return (\n    <>\n      <Modal size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" show={reponame===\"\"?true:false} centered>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Give your repo a name\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input\n            onChange={handleChange}\n            className=\"form-control w-100\"\n            type=\"text\"\n            id=\"reponame\"\n            \n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => saveName()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n","/Users/filipmertens/code/boxtest/src/components/LocalStorage/LocalStorage.ts",["170"],"import { unstable_batchedUpdates } from \"react-dom\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { fsConfigPromise, gitservice, ipfservice } from \"../../App\";\nimport { boxObject } from \"../3box/3boxService\";\nimport { default as dateFormat } from 'dateformat'\nexport class LocalIPFSStorage {\n  boxObjects = new BehaviorSubject<boxObject[] | []>([]);\n  objects: any[] = [];\n\n  async init() {\n    try {\n      await this.read();\n    } catch (e) {\n      console.log(e);\n      await this.write();\n    }\n  }\n\n  async read() {\n    let r = await fsConfigPromise.readFile(\"/objects.json\", {\n      encoding: \"utf8\",\n    });\n    this.objects = JSON.parse(r);\n    this.objects.sort((a, b) => (a.datecommit > b.datecommit) ? -1 : 1)\n    this.objects = await this.filterNulls();\n    console.log(this.objects);\n    this.boxObjects.next(this.objects);\n  }\n\n  async write() {\n    await fsConfigPromise.writeFile(\n      \"/objects.json\",\n      JSON.stringify(await this.filterNulls()),\n      { encoding: \"utf8\" }\n    );\n  }\n\n  async addToStorage(box: boxObject) {\n    await this.init();\n    await this.deleteFromStorage(box.cid)\n    this.objects.push(box);\n    await this.write();\n    await this.read();\n  }\n\n  async filterNulls() {\n    var filtered = this.objects.filter(function (el) {\n      return el != null;\n    });\n    return filtered;\n  }\n\n  async deleteFromStorage(cid: string | undefined) {\n    if (cid !== undefined) {\n      await this.read();\n      this.objects = this.objects.filter((i) => i.cid !== cid);\n      await this.write();\n      await this.read();\n    }\n  }\n\n  async createBoxObject() {\n    await this.init();\n    const commits = await gitservice.getCommits();\n    let key = gitservice.reponame;\n\n    let ob: boxObject = {\n      key: key,\n      cid: ipfservice.cid,\n      datestored: dateFormat(new Date(),\"dddd, mmmm dS, yyyy, h:MM:ss TT\"),\n      datecommit: dateFormat(new Date(commits[0].commit.committer.timestamp * 1000), \"dddd, mmmm dS, yyyy, h:MM:ss TT\"),\n      timestamp: commits[0].commit.committer.timestamp,\n      ref: commits[0].oid,\n      message: commits[0].commit.message,\n    };\n\n    return ob;\n  }\n}\n","/Users/filipmertens/code/boxtest/src/components/LocalStorage/LocalIPFSView.tsx",["171","172"],"import { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react'\nimport { Card } from 'react-bootstrap';\nimport { useBehaviorSubject } from 'use-subscribable';\nimport { ipfservice, localipfsstorage } from '../../App';\n\ninterface LocalIPFSViewProps {\n\n}\n\nexport const LocalIPFSView: React.FC<LocalIPFSViewProps> = ({}) => {\n    const boxobjects = useBehaviorSubject(localipfsstorage.boxObjects);\n\n    useEffect( ()=>{\n        localipfsstorage.init()\n    },[])\n\n\n    localipfsstorage.boxObjects\n      .subscribe((x) => {\n        console.log(\"box objects\", x);\n      })\n      .unsubscribe();\n  \n    const getUrlLink = (cid: string | undefined) => {\n      if (cid !== \"\" && cid !== undefined) {\n        return (\n          <a target=\"_blank\" href={getUrl(cid)} id=\"CID\">\n            {getUrl(cid)}\n          </a>\n        );\n      } else {\n        return <></>;\n      }\n    };\n  \n    const getUrl = (cid: string) => {\n      return `${ipfservice.ipfsconfig.ipfsurl}${cid}`;\n    };\n  \n    return (\n      <>\n        <h4>Local Storage</h4>\n        <div className=\"container-fluid\">\n          {(boxobjects || []).map((o, index) => {\n            return (\n              <div className=\"row p-1 small\">\n                <Card className=\"w-75\">\n                  <Card.Body>\n                      <Card.Title>\n                    {o.key}\n                    </Card.Title>\n                    <br />\n                    IPFS: {getUrlLink(o.cid)}\n                    <br />\n                    DATE: {o.datestored}\n                    <br />\n                    DATE OF LAST COMMIT: {o.datecommit}\n                    <br />\n                    MESSAGE: {o.message}\n                    <br />\n                    COMMIT: {o.ref}\n                    <br />\n                  </Card.Body>\n                </Card>\n                <div className=\"col\">\n                  <button onClick={async()=> await ipfservice.importFromCID(o.cid)} className=\"btn btn-primary btn-sm mr-2 import3b-btn\">\n                    import\n                  </button>\n                  <button onClick={async()=> await localipfsstorage.deleteFromStorage(o?.cid)} className=\"btn btn-danger btn-sm delete3b-btn\">\n                    <FontAwesomeIcon icon={faTrash} />\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </>\n    );\n}",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"181","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":12},{"ruleId":"177","severity":1,"message":"182","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":11},{"ruleId":"177","severity":1,"message":"183","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":17},{"ruleId":"177","severity":1,"message":"184","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":20},{"ruleId":"177","severity":1,"message":"185","line":11,"column":10,"nodeType":"179","messageId":"180","endLine":11,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":70,"column":11,"nodeType":"188","messageId":"189","endLine":70,"endColumn":13},{"ruleId":"177","severity":1,"message":"190","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":25},{"ruleId":"177","severity":1,"message":"191","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":10},{"ruleId":"177","severity":1,"message":"192","line":5,"column":3,"nodeType":"179","messageId":"180","endLine":5,"endColumn":14},{"ruleId":"177","severity":1,"message":"193","line":6,"column":3,"nodeType":"179","messageId":"180","endLine":6,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":224,"column":35,"nodeType":"196","messageId":"197","endLine":224,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":225,"column":29,"nodeType":"196","messageId":"197","endLine":225,"endColumn":31},{"ruleId":"177","severity":1,"message":"198","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":23,"column":3,"nodeType":"201","messageId":"202","endLine":25,"endColumn":4},{"ruleId":"177","severity":1,"message":"203","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":20},{"ruleId":"194","severity":1,"message":"204","line":11,"column":20,"nodeType":"196","messageId":"205","endLine":11,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":71,"column":17,"nodeType":"196","messageId":"197","endLine":71,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":75,"column":17,"nodeType":"196","messageId":"197","endLine":75,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":8,"column":53,"nodeType":"208","messageId":"189","endLine":8,"endColumn":55},{"ruleId":"177","severity":1,"message":"209","line":10,"column":9,"nodeType":"179","messageId":"180","endLine":10,"endColumn":21},{"ruleId":"210","severity":1,"message":"211","line":18,"column":12,"nodeType":"212","endLine":18,"endColumn":27},{"ruleId":"206","severity":1,"message":"207","line":8,"column":53,"nodeType":"208","messageId":"189","endLine":8,"endColumn":55},{"ruleId":"177","severity":1,"message":"178","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":9,"column":47,"nodeType":"208","messageId":"189","endLine":9,"endColumn":49},{"ruleId":"177","severity":1,"message":"213","line":10,"column":10,"nodeType":"179","messageId":"180","endLine":10,"endColumn":14},{"ruleId":"177","severity":1,"message":"214","line":10,"column":16,"nodeType":"179","messageId":"180","endLine":10,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":8,"column":47,"nodeType":"208","messageId":"189","endLine":8,"endColumn":49},{"ruleId":"206","severity":1,"message":"207","line":8,"column":53,"nodeType":"208","messageId":"189","endLine":8,"endColumn":55},{"ruleId":"177","severity":1,"message":"215","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"177","severity":1,"message":"216","line":14,"column":9,"nodeType":"179","messageId":"180","endLine":14,"endColumn":17},{"ruleId":"177","severity":1,"message":"217","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":10,"column":51,"nodeType":"208","messageId":"189","endLine":10,"endColumn":53},{"ruleId":"177","severity":1,"message":"218","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":12,"column":57,"nodeType":"208","messageId":"189","endLine":12,"endColumn":59},{"ruleId":"210","severity":1,"message":"211","line":24,"column":12,"nodeType":"212","endLine":24,"endColumn":27},{"ruleId":"206","severity":1,"message":"207","line":6,"column":59,"nodeType":"208","messageId":"189","endLine":6,"endColumn":61},{"ruleId":"206","severity":1,"message":"207","line":7,"column":43,"nodeType":"208","messageId":"189","endLine":7,"endColumn":45},{"ruleId":"177","severity":1,"message":"219","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":9,"column":51,"nodeType":"208","messageId":"189","endLine":9,"endColumn":53},{"ruleId":"177","severity":1,"message":"220","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"206","severity":1,"message":"207","line":12,"column":61,"nodeType":"208","messageId":"189","endLine":12,"endColumn":63},{"ruleId":"210","severity":1,"message":"211","line":29,"column":14,"nodeType":"212","endLine":29,"endColumn":29},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Box' is defined but never used.","'Web3Modal' is defined but never used.","'getAddress' is defined but never used.","'BoxController' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'clearFileSystem' is defined but never used.","'FS' is defined but never used.","'fileservice' is defined but never used.","'fsNoPromise' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'fileStatuses' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'gitservice' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'boxconnected' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'mock' is assigned a value but never used.","'setMock' is assigned a value but never used.","'client' is defined but never used.","'diffFile' is assigned a value but never used.","'WalletConnectProvider' is defined but never used.","'boxObject' is defined but never used.","'gitService' is defined but never used.","'unstable_batchedUpdates' is defined but never used.","no-global-assign","no-unsafe-negation"]